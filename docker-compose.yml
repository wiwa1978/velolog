version: '3'
services:

  #PHP Service
  laravel-docker-boilerplate-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: laravel-docker-boilerplate-app
    restart: unless-stopped
    tty: true
    env_file:
      - env/development
    environment:
      SERVICE_NAME: laravel-docker-boilerplate-app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./application/:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel-docker-boilerplate-network

  #Nginx Service
  laravel-docker-boilerplate-webserver:
    image: nginx:alpine
    container_name: laravel-docker-boilerplate-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "11111:80"
    volumes:
      - ./application/:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - laravel-docker-boilerplate-network

  #MySQL Service
  laravel-docker-boilerplate-mysql:
    image: mysql:5.7
    container_name: laravel-docker-boilerplate-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "33333:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: laravel-docker-boilerplate
      MYSQL_USER: laravel-docker-boilerplate
      MYSQL_PASSWORD: 123456
      SERVICE_TAGS: dev
      SERVICE_NAME: laravel-docker-boilerplate-mysql
    volumes:
      - laravel-docker-boilerplate-mysql-data:/var/lib/mysql/
    networks:
      - laravel-docker-boilerplate-network

#Docker Networks
networks:
  laravel-docker-boilerplate-network:
    driver: bridge

#Volumes
volumes:
  laravel-docker-boilerplate-mysql-data:
    driver: local
